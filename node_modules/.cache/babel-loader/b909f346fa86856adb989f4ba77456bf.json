{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ubuntu/notes-app-with-auth/src/components/EditNote.jsx\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nvar EditNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditNote, _Component);\n\n  function EditNote(props) {\n    var _this;\n\n    _classCallCheck(this, EditNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditNote).call(this, props));\n    _this.state = {\n      open: true,\n      noteTitle: _this.props.myNotes.filter(function (note) {\n        return note.id === parseFloat(_this.props.match.params.id);\n      })[0].noteTitle,\n      noteDescription: _this.props.myNotes.filter(function (note) {\n        return note.id === parseFloat(_this.props.match.params.id);\n      })[0].noteDescription\n    };\n    _this.handleClickOpen = _this.handleClickOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleUpdateNote = _this.handleUpdateNote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickClose = _this.handleClickClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNoteTitleChange = _this.handleNoteTitleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNoteDescriptionChange = _this.handleNoteDescriptionChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditNote, [{\n    key: \"handleClickOpen\",\n    value: function handleClickOpen() {\n      this.setState({\n        open: true\n      });\n    }\n  }, {\n    key: \"handleClickClose\",\n    value: function handleClickClose() {\n      this.setState({\n        open: false,\n        noteTitle: '',\n        noteDescription: ''\n      });\n      this.props.history.push('/home');\n    }\n  }, {\n    key: \"handleNoteTitleChange\",\n    value: function handleNoteTitleChange(event) {\n      this.setState({\n        noteTitle: event.target.value\n      });\n    }\n  }, {\n    key: \"handleNoteDescriptionChange\",\n    value: function handleNoteDescriptionChange(event) {\n      this.setState({\n        noteDescription: event.target.value\n      });\n    }\n  }, {\n    key: \"handleUpdateNote\",\n    value: function handleUpdateNote() {\n      var updatedNote = {\n        id: parseFloat(this.props.match.params.id),\n        noteTitle: this.state.noteTitle,\n        noteDescription: this.state.noteDescription\n      };\n      this.props.handleUpdateNote(updatedNote);\n      this.handleClickClose();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClickClose,\n        \"aria-labelledby\": \"Edit Note Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"Edit Note Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Edit Note\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"note-title\",\n        label: \"Note Title\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: this.handleNoteTitleChange,\n        value: this.state.noteTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        margin: \"dense\",\n        id: \"note-description\",\n        label: \"Note Description\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: this.handleNoteDescriptionChange,\n        value: this.state.noteDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClickClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleUpdateNote,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Update\")));\n    }\n  }]);\n\n  return EditNote;\n}(Component);\n\nexport default EditNote;","map":{"version":3,"sources":["/home/ubuntu/notes-app-with-auth/src/components/EditNote.jsx"],"names":["React","Component","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","EditNote","props","state","open","noteTitle","myNotes","filter","note","id","parseFloat","match","params","noteDescription","handleClickOpen","bind","handleUpdateNote","handleClickClose","handleNoteTitleChange","handleNoteDescriptionChange","setState","history","push","event","target","value","updatedNote"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass EditNote extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n            noteTitle: this.props.myNotes.filter(note => note.id === parseFloat(this.props.match.params.id))[0].noteTitle,\n            noteDescription: this.props.myNotes.filter(note => note.id === parseFloat(this.props.match.params.id))[0].noteDescription\n        }\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.handleUpdateNote = this.handleUpdateNote.bind(this);\n        this.handleClickClose = this.handleClickClose.bind(this);\n        this.handleNoteTitleChange = this.handleNoteTitleChange.bind(this);\n        this.handleNoteDescriptionChange = this.handleNoteDescriptionChange.bind(this);\n    }\n\n    handleClickOpen() {\n        this.setState({ open: true });\n    }\n\n    handleClickClose() {\n        this.setState({\n            open: false,\n            noteTitle: '',\n            noteDescription: '',\n        });\n        this.props.history.push('/home');\n    }\n\n    handleNoteTitleChange(event) {\n        this.setState({ noteTitle: event.target.value });\n    }\n\n    handleNoteDescriptionChange(event) {\n        this.setState({ noteDescription: event.target.value });\n    }\n\n    handleUpdateNote() {\n        const updatedNote = {\n            id: parseFloat(this.props.match.params.id),\n            noteTitle: this.state.noteTitle,\n            noteDescription: this.state.noteDescription,\n        }\n        this.props.handleUpdateNote(updatedNote);\n        this.handleClickClose();\n    }\n\n    render() {\n        return (\n            <Dialog\n                open={this.state.open}\n                onClose={this.handleClickClose}\n                aria-labelledby=\"Edit Note Form\"\n            >\n                <DialogTitle id=\"Edit Note Form\">\n                    Edit Note\n                </DialogTitle>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"note-title\"\n                        label=\"Note Title\"\n                        type=\"text\"\n                        fullWidth\n                        onChange={this.handleNoteTitleChange}\n                        value={this.state.noteTitle}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"note-description\"\n                        label=\"Note Description\"\n                        type=\"text\"\n                        fullWidth\n                        onChange={this.handleNoteDescriptionChange}\n                        value={this.state.noteDescription}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClickClose} color=\"primary\">\n                        Cancel\n                        </Button>\n                    <Button onClick={this.handleUpdateNote} color=\"primary\">\n                        Update\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default EditNote;"]},"metadata":{},"sourceType":"module"}