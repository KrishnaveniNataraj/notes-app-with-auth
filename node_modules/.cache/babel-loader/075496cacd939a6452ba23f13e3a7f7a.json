{"ast":null,"code":"import _objectSpread from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ubuntu/notes-app-with-auth/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ubuntu/notes-app-with-auth/src/routers/AppRouter.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport NotesApp from '../components/NotesApp';\nimport EditNote from '../components/EditNote';\nimport WelcomePage from '../components/WelcomePage';\nimport Header from '../components/Header';\nimport { red } from '@material-ui/core/colors';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport createHistory from 'history/createBrowserHistory';\nimport yellow from '@material-ui/core/colors/yellow';\nexport var history = createHistory();\nvar theme = createMuiTheme({\n  palette: {\n    primary: yellow\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nvar AppRouter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppRouter, _Component);\n\n  function AppRouter(props) {\n    var _this;\n\n    _classCallCheck(this, AppRouter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppRouter).call(this, props));\n    _this.state = {\n      notes: []\n    };\n    _this.handleAddNote = _this.handleAddNote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRemoveNote = _this.handleRemoveNote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleUpdateNote = _this.handleUpdateNote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AppRouter, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"componentDidMount\");\n      fetch('http://localhost:8080/notes').then(function (response) {\n        return response.json();\n      }).then(function (notes) {\n        _this2.setState({\n          notes: notes\n        });\n      });\n    }\n  }, {\n    key: \"handleAddNote\",\n    value: function handleAddNote(note) {\n      this.setState(function (currState) {\n        return {\n          notes: currState.notes.concat([note])\n        };\n      });\n      fetch('http://localhost:8080/notes', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(note)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (note) {\n        return console.log(\"note created with value: \".concat(JSON.stringify(note)));\n      });\n    }\n  }, {\n    key: \"handleRemoveNote\",\n    value: function handleRemoveNote(noteId) {\n      fetch('http://localhost:8080/notes/' + noteId, {\n        method: 'DELETE',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(console.log(\"delete \" + noteId));\n      var noteIndexToRemove = this.state.notes.findIndex(function (note) {\n        return note.id === noteId;\n      });\n      this.setState(function (currState) {\n        return {\n          notes: [].concat(_toConsumableArray(currState.notes.slice(0, noteIndexToRemove)), _toConsumableArray(currState.notes.slice(noteIndexToRemove + 1)))\n        };\n      });\n    }\n  }, {\n    key: \"handleUpdateNote\",\n    value: function handleUpdateNote(updatedNote) {\n      var noteIndexToUpdate = this.state.notes.findIndex(function (note) {\n        return note.id === updatedNote.id;\n      });\n      fetch('http://localhost:8080/notes/' + updatedNote.id, {\n        method: 'PUT',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedNote)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (note) {\n        return console.log(\"note created with value: \".concat(JSON.stringify(note)));\n      });\n      this.setState(function (currState) {\n        return {\n          notes: [].concat(_toConsumableArray(currState.notes.slice(0, noteIndexToUpdate)), [_objectSpread({}, updatedNote)], _toConsumableArray(currState.notes.slice(noteIndexToUpdate + 1)))\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(MuiThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(Router, {\n        history: history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        render: function render() {\n          return React.createElement(MuiThemeProvider, {\n            theme: theme,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, React.createElement(WelcomePage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/home\",\n        render: function render(props) {\n          return React.createElement(MuiThemeProvider, {\n            theme: theme,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, React.createElement(NotesApp, Object.assign({}, props, {\n            notes: _this3.state.notes,\n            handleAddNote: _this3.handleAddNote,\n            handleRemoveNote: _this3.handleRemoveNote,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          })));\n        },\n        exact: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/edit-note/:id\",\n        render: function render(props) {\n          return React.createElement(MuiThemeProvider, {\n            theme: theme,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, React.createElement(EditNote, Object.assign({}, props, {\n            notes: _this3.state.notes,\n            handleUpdateNote: _this3.handleUpdateNote,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AppRouter;\n}(Component);\n\nexport default AppRouter;","map":{"version":3,"sources":["/home/ubuntu/notes-app-with-auth/src/routers/AppRouter.jsx"],"names":["React","Component","Fragment","Router","Route","Switch","NotesApp","EditNote","WelcomePage","Header","red","createMuiTheme","MuiThemeProvider","createHistory","yellow","history","theme","palette","primary","typography","useNextVariants","AppRouter","props","state","notes","handleAddNote","bind","handleRemoveNote","handleUpdateNote","console","log","fetch","then","response","json","setState","note","currState","concat","method","headers","body","JSON","stringify","noteId","noteIndexToRemove","findIndex","id","slice","updatedNote","noteIndexToUpdate"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport NotesApp from '../components/NotesApp';\nimport EditNote from '../components/EditNote';\nimport WelcomePage from '../components/WelcomePage';\nimport Header from '../components/Header';\nimport { red } from '@material-ui/core/colors';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport createHistory from 'history/createBrowserHistory';\nimport yellow from '@material-ui/core/colors/yellow';\n\nexport const history = createHistory();\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: yellow,        \n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nclass AppRouter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notes: [],\n        };\n        this.handleAddNote = this.handleAddNote.bind(this);\n        this.handleRemoveNote = this.handleRemoveNote.bind(this);\n        this.handleUpdateNote = this.handleUpdateNote.bind(this);\n    }\n\n    componentDidMount() {\n        console.log(\"componentDidMount\");        \n        fetch('http://localhost:8080/notes')\n            .then(response => response.json())\n            .then(notes => {               \n                this.setState({\n                    notes: notes,                              \n                });\n            });\n    }\n\n    handleAddNote(note) {        \n        this.setState((currState) => ({\n            notes: currState.notes.concat([note])\n        }));\n        fetch('http://localhost:8080/notes', {\n            method: 'POST',\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(note)\n        })\n        .then(response => response.json())\n        .then(note => console.log(`note created with value: ${JSON.stringify(note)}`));\n    }\n\n    handleRemoveNote(noteId) {\n        fetch('http://localhost:8080/notes/'+noteId, {\n            method: 'DELETE',\n            headers: {\"Content-Type\": \"application/json\"}            \n        })\n        .then(response => response.json())\n        .then(\n            console.log(\"delete \"+noteId)           \n        );\n\n        const noteIndexToRemove = this.state.notes.findIndex(note => note.id === noteId);  \n        this.setState((currState) => ({\n            notes: [...currState.notes.slice(0, noteIndexToRemove), ...currState.notes.slice(noteIndexToRemove + 1)]\n        }));\n    }\n\n    handleUpdateNote(updatedNote) {\n        const noteIndexToUpdate = this.state.notes.findIndex(note => note.id === updatedNote.id);  \n\n        fetch('http://localhost:8080/notes/'+updatedNote.id, {\n            method: 'PUT',\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(updatedNote)\n        })        \n        .then(response => response.json())\n        .then(note => console.log(`note created with value: ${JSON.stringify(note)}`));        \n\n        this.setState((currState) => ({\n            notes: [...currState.notes.slice(0, noteIndexToUpdate), {...updatedNote}, ...currState.notes.slice(noteIndexToUpdate + 1)]\n        }));\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <MuiThemeProvider theme={theme}>\n                    <Header />\n                </MuiThemeProvider>\n                <Router history={history}>\n                    <Switch>\n                        <Route\n                            path=\"/\"\n                            exact\n                            render={()=>(\n                                <MuiThemeProvider theme={theme}>\n                                    <WelcomePage/>\n                                </MuiThemeProvider>\n                            )}\n                        />\n                        <Route \n                            path=\"/home\" \n                            render={(props) => (<MuiThemeProvider theme={theme}>\n                                                <NotesApp\n                                                    {...props}\n                                                    notes={this.state.notes}\n                                                    handleAddNote={this.handleAddNote}\n                                                    handleRemoveNote={this.handleRemoveNote}\n                                                />\n                                                </MuiThemeProvider>\n                                                )}\n                            exact \n                        />\n                        <Route \n                            path=\"/edit-note/:id\" \n                            render={(props) => (<MuiThemeProvider theme={theme}>\n                                                <EditNote\n                                                    {...props}\n                                                    notes={this.state.notes}\n                                                    handleUpdateNote={this.handleUpdateNote} \n                                                />\n                                                </MuiThemeProvider>\n                                                )} \n                        />\n                    </Switch>\n                </Router>\n            </Fragment>\n        );\n    }\n}\n\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}